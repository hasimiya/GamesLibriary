@model GamesLibriary.Models.ViewModel.GamesListViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to Hachhook</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <div class="button-action" style="margin-bottom: 10px">
        <form asp-action="Create" method="get">
            <button type="submit" class="btn btn-info">Create new +</button>
        </form>
        <a class="btn btn-info" href="?sortOrder=title__ascending">↑</a>
        <a class="btn btn-info" href="?sortOrder=title__descending">↓</a>
        <form method="get">
            <select name="gamesGenre" class="btn btn-info">
                <option value="">All</option>
                @foreach (var value in Enum.GetValues(typeof(GamesItem.GameGenre)))
                {
                    <option value="@value" selected="@(Model.CurrentGenre?.ToString() == value.ToString() ? "selected" : null)">
                        @value
                    </option>
                }
            </select>
            <button type="submit" class="btn btn-info">Filter</button>
        </form>
    </div>
    @foreach (var games in Model.gamesItems)
    {
        <div class="wrapper-block-games">
            <div class="images">
                <img src="@Url.Content(games.ImageUrl)" />
            </div>
            <div class="description">
                <h2>@games.Name</h2>
                <h6>@games.Description</h6>
                <div style="display: flex; justify-content: space-between">
                    <div>
                        <h6>Жанр: @games.Genre</h6>
                        <h6>Год выпуска: @games.Publication</h6>
                    </div>
                    <div class="button-action">
                        <form asp-action="Edit" method="get">
                            <input type="hidden" name="id" value="@games.ID" />
                            <button type="submit" class="btn btn-outline-primary">Edit</button>
                        </form>

                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                data-game-id="@games.ID" data-game-name="@games.Name" onclick="openDeleteModal(this)">
                            @* data-bs-toggle - используеться для открытия модального окна
                                data-bs-target - указываем на ID модального окна
                                data-game-id - передаем ID игры для удаления
                                data-game-name - передаем название игрі для отображения в модальном окне
                                onclick - вызываем функцию openDeleteModal, которая заполняет модальное окно данными*@
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
    <div>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a class="btn btn-info" asp-action="Index" asp-route-page="@i">@i</a>
        }
    </div>
</div>

@* Modal Window *@

<div id="deleteModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Delete" method="post">
                <div class="modal-header">
                    <h4 class="modal-title">Подтверждение удаления</h4>
                    <img style="width: 35px; height: 35px" src="~/images/icon/bell-icon.png" />
                    <button type="button" class="btn" data-bs-dismiss="modal">X</button>
                </div>
                <div class="modal-body">
                    Вы уверены, что хотите удалить <b id="modalGameName"></b>?
                    <input type="hidden" name="id" id="modalGameId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">Closed</button>
                    <button type="submit" class="btn btn-outline-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>


@*
    aria-hidden - указывает, что модальное окно скрыто от вспомогательных технологий;
    modal-dialog - класс для стилизации диалогового окна(данный блок отвечает за ширину и отступы);
    modal-content - класс для стилизации содержимого модального окна(отвечает за установку теней, границ);
    type="button" - кнопка для закрытия модального окна;
    type="submit" - кнопка для отправки формы;
*@

<script>
    function openDeleteModal(button) {
        const gameId = button.getAttribute('data-game-id');
        const gameName = button.getAttribute('data-game-name');

        document.getElementById('modalGameName').textContent = gameName;
        document.getElementById('modalGameId').value = gameId;

        const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
        modal.show();
    }
</script>

@*
    function openDeleteModal(button) - функция, которая вызывается при нажатии кнопки "Delete";
    button - элемент кнопки, на которую нажали;
    getAttribute('data-game-id') - получение ID игры из атрибута data-game-id;
    document - объект, представляющий HTML-документ;
    getElementById - метод для получения элемента по его ID;
    textContent - свойство для установки текста элемента;
    value - свойство для установки значения элемента input;
    modal = new bootstrap.Modal - создание нового экземпляра модального окна Bootstrap;
    modal.show() - метод для отображения модального окна;
*@